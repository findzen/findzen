package net.findzen.utils{    import flash.text.Font;    import flash.text.TextFormat;    import flash.utils.Dictionary;    import net.findzen.utils.Log;    public class FontManager    {        private static var __embedFonts:Boolean = true;        private static var __deviceFont:String = null;        private static var __fonts:Dictionary = new Dictionary();        private static var __formats:Dictionary = new Dictionary();        public static function get deviceFont():String        {            return __deviceFont;        }        public static function set deviceFont(value:String):void        {            __deviceFont = value;        }        public static function addFont($id:String, $font:Font):void        {            __fonts[$id] = $font;        }        public static function addFormat($id:String, $format:TextFormat):void        {            __formats[$id] = $format;        }        public static function getFormat($id:String):TextFormat        {            if(__formats.hasOwnProperty($id))            {                var format:TextFormat = __formats[$id];                //trace('FontManager: getFormat', format.font);                if(!__embedFonts)                    format.font = __deviceFont;                //format.font = __fonts['FuturaBold'].fontName;                //trace(__fonts['FuturaBold'].fontName);                //trace('FontManager: getFormat', format.font, 'bold:', format.bold);                return format;            }            else            {                return null;            }        }        public static function get embedFonts():Boolean        {            return __embedFonts;        }        public static function set embedFonts($b:Boolean):void        {            __embedFonts = $b;        }    }}