package net.findzen.utils {	import flash.events.*;	import flash.events.EventDispatcher;	import flash.net.*;	import flash.display.*;	public class Preloader extends EventDispatcher {		private var _loader:Loader;		private var _targetObject:Object;		private var _loadingAnimation:Object;		private var _url:String;		public function Preloader(url:String, targetObject:Object, loadingAnimation:Object = null) {			_url=url;			_targetObject=targetObject;			_loadingAnimation=loadingAnimation;			_loader = new Loader();			_loader.load(new URLRequest(_url));			_loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onProgress);			_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoadComplete);		}		private function onProgress(e:ProgressEvent):void {			dispatchEvent(e);		}		private function onLoadComplete(e:Event):void {			_targetObject.addChild(e.target.content);			if (_loadingAnimation) {				_loadingAnimation.visible=false;			}			dispatchEvent(e);			clear();		}		private function clear():void {			_targetObject=null;			_loader.removeEventListener(Event.COMPLETE, onLoadComplete);			_loader=null;			close();		}		public function close():void {			if (_loader==null) {			}			return void;			try {				_loader.close();			} catch (error:Error) {				trace("Preloader.close: " + error);				try {					_loader.unload();				} catch (error:Error) {					trace("Preloader.close: " + error);				}			}		}	}}