package net.findzen.utils {	import flash.events.*;	import flash.events.EventDispatcher;	import flash.net.*;	import flash.display.*;		public class LoadImage extends EventDispatcher {		private var loader:Loader;		private var obj:*;		private var _index:Number;			public function LoadImage(path:String) {			loader = new Loader();			loader.load(new URLRequest(path));			loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onProgress);			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadComplete);		}		public function get name():String {			return loader.name;		}				public function set name(value:String):void {			loader.name = value;		}				private function onProgress(e:ProgressEvent):void {			dispatchEvent(e);		}				private function loadComplete(e:Event):void {			obj = e.target.content;			dispatchEvent(e);			clear();		}				public function get returnData():Object {			return obj;		}				public function set index(index:Number):void {			_index = index;		}				public function get index():Number {			return _index;		}				private function clear():void {			obj = null;			loader.removeEventListener(Event.COMPLETE, loadComplete);			loader = null;		}				public function close():void {			if (loader == null) return void;							try {								loader.close();							} catch(error:Error) {								trace("LoadImage.close: " + error);								try {										loader.unload();									} catch(error:Error) {										trace("LoadImage.close: " + error);									}			}		}	}}